//130. Surrounded Regions in java...


class Solution {

    public void dfs(char[][] board, int i, int j, int row, int col) {
        if (i < 0 || i >= row || j < 0 || j >= col || board[i][j] != 'O') {
            return;
        }

        board[i][j] = 'T';

        dfs(board, i + 1, j, row, col);
        dfs(board, i -1, j, row, col);
        dfs(board, i , j + 1, row, col);
        dfs(board, i, j - 1, row, col);
    }

    public void solve(char[][] board) {
        if(board==null || board.length==0 || board[0].length==0){
            return;
        }

        int row = board.length;
        int col = board[0].length;

        for(int i= 0; i<col; i++){
            if(board[0][i]=='O'){
                dfs(board,0,i,row,col);
            }
            if(board[row-1][i]=='O'){
                dfs(board,row-1,i,row,col);
            }
        }

        for(int j= 0; j<row; j++){
            if(board[j][0]=='O'){
                dfs(board,j,0,row,col);
            }
            if(board[j][col-1]=='O'){
                dfs(board,j,col-1,row,col);
            }
        }


        for(int i = 0; i<row; i++){
            for(int j = 0; j<col; j++){
                if(board[i][j]=='O'){
                    board[i][j]='X';
                }else if(board[i][j]=='T'){
                    board[i][j]='O';
                }
                
            }
        }


    }
}
